import Map
import Algorithm
import Network
import Uav

/* test comments*/
Action takeOff_Action(){
	Uav.takeOff_API();
}

Action flyToHeight_Action(h){
	Uav.flyToHeight_API(h);
}

Action flyTo_Action(dest){
    Uav.flyTo_API(dest);
}

Action getPosition(){
	pos = Uav.getPosition_API();
	return pos;
}

Action getDestination(trace, pos){
	dest = Uav.getDestination_API(trace, pos);
	return dest;
}

Agent search_uav {
	takeOff_Action, flyToHeight_Action, flyTo_Action, getPosition, getDestination;
}

Behavior takeOff_Behavior(h) {
	@init{}
	@goal{}
	@routine{
		takeOff_Action();
		flyToHeight_Action(h);
	}
}

Behavior cover_Behavior(traces){
	@init{
        step = 0;
    }
	@goal{
        $ step > 5
    }
	@routine{
		/* TODO: fly_a_trace(my_trace); */
        position = getPosition();
        destination = getDestination(traces, position);
        flyTo_Action(destination);
        step = step + 1;
	}
}

Task search({agtC[stC~edC]}, city_map){
	@init{
		height = 50;
		traces_for_cover = Algorithm.coverTspSolver(city_map);
	}
	@goal{}
	@routine{
		each agtC[stC~edC] {
            takeOff_Behavior(height);
			cover_Behavior(traces_for_cover);
		}
	}
}

Main {
	Agent search_uav 3;
	search({search_uav[0~3]}, Map.AirsimNH);
}